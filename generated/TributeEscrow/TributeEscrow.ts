// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class TributeProposal extends ethereum.Event {
  get params(): TributeProposal__Params {
    return new TributeProposal__Params(this);
  }
}

export class TributeProposal__Params {
  _event: TributeProposal;

  constructor(event: TributeProposal) {
    this._event = event;
  }

  get baal(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get recipient(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get proposalId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class TributeEscrow extends ethereum.SmartContract {
  static bind(address: Address): TributeEscrow {
    return new TributeEscrow("TributeEscrow", address);
  }

  encodeTributeProposal(
    baal: Address,
    shares: BigInt,
    loot: BigInt,
    recipient: Address,
    proposalId: BigInt,
    escrow: Address
  ): Bytes {
    let result = super.call(
      "encodeTributeProposal",
      "encodeTributeProposal(address,uint256,uint256,address,uint32,address):(bytes)",
      [
        ethereum.Value.fromAddress(baal),
        ethereum.Value.fromUnsignedBigInt(shares),
        ethereum.Value.fromUnsignedBigInt(loot),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(proposalId),
        ethereum.Value.fromAddress(escrow)
      ]
    );

    return result[0].toBytes();
  }

  try_encodeTributeProposal(
    baal: Address,
    shares: BigInt,
    loot: BigInt,
    recipient: Address,
    proposalId: BigInt,
    escrow: Address
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "encodeTributeProposal",
      "encodeTributeProposal(address,uint256,uint256,address,uint32,address):(bytes)",
      [
        ethereum.Value.fromAddress(baal),
        ethereum.Value.fromUnsignedBigInt(shares),
        ethereum.Value.fromUnsignedBigInt(loot),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(proposalId),
        ethereum.Value.fromAddress(escrow)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ReleaseEscrowCall extends ethereum.Call {
  get inputs(): ReleaseEscrowCall__Inputs {
    return new ReleaseEscrowCall__Inputs(this);
  }

  get outputs(): ReleaseEscrowCall__Outputs {
    return new ReleaseEscrowCall__Outputs(this);
  }
}

export class ReleaseEscrowCall__Inputs {
  _call: ReleaseEscrowCall;

  constructor(call: ReleaseEscrowCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ReleaseEscrowCall__Outputs {
  _call: ReleaseEscrowCall;

  constructor(call: ReleaseEscrowCall) {
    this._call = call;
  }
}

export class SubmitTributeProposalCall extends ethereum.Call {
  get inputs(): SubmitTributeProposalCall__Inputs {
    return new SubmitTributeProposalCall__Inputs(this);
  }

  get outputs(): SubmitTributeProposalCall__Outputs {
    return new SubmitTributeProposalCall__Outputs(this);
  }
}

export class SubmitTributeProposalCall__Inputs {
  _call: SubmitTributeProposalCall;

  constructor(call: SubmitTributeProposalCall) {
    this._call = call;
  }

  get baal(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get shares(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get loot(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get expiration(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get details(): string {
    return this._call.inputValues[6].value.toString();
  }
}

export class SubmitTributeProposalCall__Outputs {
  _call: SubmitTributeProposalCall;

  constructor(call: SubmitTributeProposalCall) {
    this._call = call;
  }
}
